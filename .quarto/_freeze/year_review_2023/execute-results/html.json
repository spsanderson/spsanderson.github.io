{
  "hash": "5bfe342975385230a060a171d4634985",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"A Review of 2023\"\nauthor: \"Steven P Sanderson II, MPH\"\ndate: \"2024-05-28\"\noutput:\n  html:\n    #code_folding: hide\n    highlight: tango\n    toc: no\n    toc-depth: 2\n    includes:\n      in_header: GA_Script.html\n---\n\n\n\n\n# \n\n> **2023** A Year in Review\n\nThe year 2023 was a big year for me. I did a lot of coding, a lot more than I typically do. The biggest push came personally in my ongoing development of my R packages that are in the [healthyverse](www.spsanderson.com/healthyverse/). To use the **healthyverse** simply do so in the familiar fashion:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"healthyverse\")\nlibrary(healthyverse)\n```\n:::\n\n\nHere are links to all of the packages:\n\n-   [`healthyR`](https://www.spsanderson.com/healthyR/)\n-   [`healthyR.data`](https://www.spsanderson.com/healthyR.data/)\n-   [`healthyR.ts`](https://www.spsanderson.com/healthyR.ts/)\n-   [`healthyR.ai`](https://www.spsanderson.com/healthyR.ai/)\n-   [`TidyDensity`](https://www.spsanderson.com/TidyDensity/)\n-   [`healthyverse`](https://www.spsanderson.com/healthyverse/)\n-   [`tidyAML`](https://www.spsanderson.com/tidyAML/)\n\nIn order to start looking at some of the data that pertains to 2023 lets first get the data from the CRAN logs. Since I do this daily already, I can simply use the rds file I already have. I am going to go through the motions though, in case others might want to do something similar. The functions I am using to get the data can [be found here](https://github.com/spsanderson/healthyverse_tsa/blob/master/00_scripts/get_data_functions.R)\n\nNow lets get that data!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\nsource(\"01_scripts/get_data_functions.R\")\nsource(\"01_scripts/data_manipulation_functions.R\")\nsource(\"01_scripts/mapping_functions.R\")\n\nget_cran_data()\nget_package_release_data()\ncsv_to_rds()\n```\n:::\n\n\nOk now that we have our data, lets ensure that we are only using the year 2023. We can do this by filtering out data by time with the [timetk](https://business-science.github.io/timetk/) package.\n\nNow lets filter our data below, some pre-processing may need to take place.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(timetk)\ndata_tbl <- downloads_processed_tbl() %>%\n  filter_by_time(\n    .date_var = date,\n    .start_date = \"2023\",\n    .end_date = \"2023\"\n  )\n\nglimpse(data_tbl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 32,438\nColumns: 11\n$ date      <date> 2023-01-01, 2023-01-01, 2023-01-01, 2023-01-01, 2023-01-01,…\n$ time      <Period> 2H 32M 10S, 9H 45M 29S, 9H 45M 40S, 9H 45M 51S, 9H 45M 51…\n$ date_time <dttm> 2023-01-01 02:32:10, 2023-01-01 09:45:29, 2023-01-01 09:45:…\n$ size      <int> 2016932, 604699, 2652829, 2297618, 2331476, 84561, 251193, 2…\n$ r_version <chr> NA, NA, NA, NA, NA, NA, NA, \"4.1.1\", \"4.1.1\", \"4.1.1\", \"4.1.…\n$ r_arch    <chr> NA, NA, NA, NA, NA, NA, NA, \"x86_64\", \"x86_64\", \"x86_64\", \"x…\n$ r_os      <chr> NA, NA, NA, NA, NA, NA, NA, \"mingw32\", \"mingw32\", \"mingw32\",…\n$ package   <chr> \"healthyR.ts\", \"healthyR.ai\", \"healthyR.data\", \"healthyR.ts\"…\n$ version   <chr> \"0.2.5\", \"0.0.10\", \"1.0.1\", \"0.2.5\", \"0.2.0\", \"1.0.2\", \"0.0.…\n$ country   <chr> \"AU\", \"US\", \"US\", \"US\", \"US\", \"US\", \"AU\", \"BE\", \"BE\", \"BE\", …\n$ ip_id     <int> 5938, 11, 11, 11, 11, 11, 5938, 14255, 14255, 14255, 14255, …\n```\n\n\n:::\n:::\n\n\nNow that we have our data, we have it for the year 2023 only with a start date of 2023-01-01 and an end date of 2023-12-31.\n\n# Package Information\n\nThe first thing we will do is look at how many downloads there were for each pacakge and it's version.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(knitr)\n\ndata_tbl %>% \n  count(package, version) %>% \n  pivot_wider(\n    id_cols       = version\n    , names_from  = package\n    , values_from = n\n    , values_fill = 0\n    ) %>%\n  arrange(version) %>%\n  kable()\n```\n\n::: {.cell-output-display}\n\n\n|version | TidyDensity| healthyR| healthyR.ai| healthyR.data| healthyR.ts| healthyverse| tidyAML|\n|:-------|-----------:|--------:|-----------:|-------------:|-----------:|------------:|-------:|\n|0.0.1   |         156|        0|         106|             0|           0|            0|     788|\n|0.0.10  |           0|        0|         210|             0|           0|            0|       0|\n|0.0.11  |           0|        0|         431|             0|           0|            0|       0|\n|0.0.12  |           0|        0|         683|             0|           0|            0|       0|\n|0.0.13  |           0|        0|        1989|             0|           0|            0|       0|\n|0.0.2   |           0|        0|         107|             0|           0|            0|    1804|\n|0.0.3   |           0|        0|         106|             0|           0|            0|     468|\n|0.0.4   |           0|        0|         107|             0|           0|            0|       0|\n|0.0.5   |           0|        0|         158|             0|           0|            0|       0|\n|0.0.6   |           0|        0|         436|             0|           0|            0|       0|\n|0.0.7   |           0|        0|         107|             0|           0|            0|       0|\n|0.0.8   |           0|        0|         104|             0|           0|            0|       0|\n|0.0.9   |           0|        0|         110|             0|           0|            0|       0|\n|0.1.0   |           0|      107|           0|             0|         112|            0|       0|\n|0.1.1   |           0|      107|           0|             0|         122|            0|       0|\n|0.1.2   |           0|      123|           0|             0|         105|            0|       0|\n|0.1.3   |           0|      109|           0|             0|         104|            0|       0|\n|0.1.4   |           0|      109|           0|             0|         109|            0|       0|\n|0.1.5   |           0|      108|           0|             0|         111|            0|       0|\n|0.1.6   |           0|      109|           0|             0|         111|            0|       0|\n|0.1.7   |           0|      157|           0|             0|         158|            0|       0|\n|0.1.8   |           0|      438|           0|             0|         437|            0|       0|\n|0.1.9   |           0|      108|           0|             0|         107|            0|       0|\n|0.2.0   |           0|      880|           0|             0|         107|            0|       0|\n|0.2.1   |           0|     2363|           0|             0|         110|            0|       0|\n|0.2.10  |           0|        0|           0|             0|         503|            0|       0|\n|0.2.11  |           0|        0|           0|             0|         527|            0|       0|\n|0.2.2   |           0|        0|           0|             0|         108|            0|       0|\n|0.2.3   |           0|        0|           0|             0|         114|            0|       0|\n|0.2.4   |           0|        0|           0|             0|         113|            0|       0|\n|0.2.5   |           0|        0|           0|             0|         162|            0|       0|\n|0.2.6   |           0|        0|           0|             0|         424|            0|       0|\n|0.2.7   |           0|        0|           0|             0|         816|            0|       0|\n|0.2.8   |           0|        0|           0|             0|        1255|            0|       0|\n|0.2.9   |           0|        0|           0|             0|         700|            0|       0|\n|0.3.0   |           0|        0|           0|             0|         507|            0|       0|\n|1.0.0   |         105|        0|           0|           107|           0|          123|       0|\n|1.0.1   |         427|        0|           0|           940|           0|          105|       0|\n|1.0.2   |           0|        0|           0|          1377|           0|          537|       0|\n|1.0.3   |           0|        0|           0|          1831|           0|          451|       0|\n|1.0.4   |           0|        0|           0|             0|           0|         1576|       0|\n|1.1.0   |         104|        0|           0|             0|           0|            0|       0|\n|1.2.0   |         106|        0|           0|             0|           0|            0|       0|\n|1.2.1   |         104|        0|           0|             0|           0|            0|       0|\n|1.2.2   |         106|        0|           0|             0|           0|            0|       0|\n|1.2.3   |         105|        0|           0|             0|           0|            0|       0|\n|1.2.4   |        1979|        0|           0|             0|           0|            0|       0|\n|1.2.5   |        1889|        0|           0|             0|           0|            0|       0|\n|1.2.6   |         956|        0|           0|             0|           0|            0|       0|\n\n\n:::\n:::\n\n\nNow lets see how many total downloads for the year there were for each package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_tbl %>%\n  count(package) %>%\n  set_names(\"Package\",\"Total Downloads\") %>%\n  kable()\n```\n\n::: {.cell-output-display}\n\n\n|Package       | Total Downloads|\n|:-------------|---------------:|\n|TidyDensity   |            6037|\n|healthyR      |            4718|\n|healthyR.ai   |            4654|\n|healthyR.data |            4255|\n|healthyR.ts   |            6922|\n|healthyverse  |            2792|\n|tidyAML       |            3060|\n\n\n:::\n\n```{.r .cell-code}\ndata_tbl %>%\n  select(package, version) %>%\n  group_by(package) %>%\n  distinct() %>%\n  mutate(release_count = n()) %>%\n  ungroup() %>%\n  select(package, release_count) %>%\n  distinct() %>%\n  set_names(\"Package\", \"Number of Releases\") %>%\n  kable()\n```\n\n::: {.cell-output-display}\n\n\n|Package       | Number of Releases|\n|:-------------|------------------:|\n|healthyR.ts   |                 23|\n|healthyR.ai   |                 13|\n|healthyR.data |                  4|\n|healthyR      |                 12|\n|healthyverse  |                  5|\n|TidyDensity   |                 11|\n|tidyAML       |                  3|\n\n\n:::\n\n```{.r .cell-code}\ntotal_number_of_releases <- data_tbl %>%\n  select(package, version) %>%\n  group_by(package) %>%\n  distinct() %>%\n  mutate(release_count = n()) %>%\n  ungroup() %>%\n  select(package, release_count) %>%\n  distinct() %>%\n  summarise(total = sum(release_count, na.rm = TRUE))\n```\n:::\n\n\nSo all in all there was a total of 32,438 downloads of all the `healthyverse` packages in 2023. There were in total 71 package releases as well.\n\n# Graphs\n\nNow lets graph the data out!\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_tbl %>%\n  count(package, version) %>%\n  ggplot(aes(x = version, y = n, alpha = 0.382)) +\n  geom_col(aes(group = package, fill = package)) +\n  facet_wrap(package ~., ncol = 2, scales = \"free\") +\n  scale_y_continuous(labels = scales::label_number(big.mark = \",\")) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\") +\n  labs(\n    title = \"Downloads by Package for 2023\",\n    subtitle = \"Faceted by Package\",\n    x = \"Version\",\n    y = \"Downloads\",\n    fill = \"Package\"\n  )\n```\n\n::: {.cell-output-display}\n![](man/figures/README-gaph_of_downloads-1.png){width=1152}\n:::\n\n```{.r .cell-code}\ndata_tbl %>%\n  count(package, version) %>%\n  group_by(package) %>%\n  mutate(cumulative_downloads = cumsum(n)) %>%\n  mutate(record = row_number()) %>%\n  ungroup() %>%\n  ggplot(aes(x = record, y = cumulative_downloads, alpha = 0.382)) +\n  geom_col(aes(group = package, fill = package)) +\n  facet_wrap(package ~., ncol = 2, scales = \"free\") +\n  scale_y_continuous(labels = scales::label_number(big.mark = \",\")) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\") +\n    labs(\n    title = \"Downloads by Package for 2023\",\n    subtitle = \"Faceted by Package\",\n    x = \"Relase Number\",\n    y = \"Downloads\",\n    fill = \"Package\"\n  )\n```\n\n::: {.cell-output-display}\n![](man/figures/README-gaph_of_downloads-2.png){width=1152}\n:::\n\n```{.r .cell-code}\ndata_tbl %>%\n  count(package, version) %>%\n  group_by(package) %>%\n  mutate(cumulative_downloads = cumsum(n)) %>%\n  mutate(record = row_number()) %>%\n  ungroup() %>%\n  ggplot(aes(x = record, y = cumulative_downloads, alpha = 0.382)) +\n  geom_line(aes(color = package, group = package), size = 1) +\n  scale_y_continuous(labels = scales::label_number(big.mark = \",\")) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\") +\n  labs(\n    title = \"Cumulative Downloads by Package for 2023\",\n    subtitle = \"Colored by Package\",\n    x = \"Release Number\",\n    y = \"Downloads\",\n    color = \"Package\"\n  )\n```\n\n::: {.cell-output-display}\n![](man/figures/README-gaph_of_downloads-3.png){width=1152}\n:::\n:::\n\n\n# Time Series Graphs\n\nNow lets get some time-series graphs.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(healthyR.ts)\npkg_tbl <- readRDS(\"00_data/pkg_release_tbl.rds\")\n\ndata_tbl %>% \n  summarise_by_time(.date_var = date, n = n()) %>% \n  ts_calendar_heatmap_plot(.date_col = date, .value_col = n, .interactive = FALSE)\n```\n\n::: {.cell-output-display}\n![](man/figures/README-ts_plots-1.png){width=1152}\n:::\n\n```{.r .cell-code}\ndata_tbl %>%\n  ts_downloads_tbl(.by_time = \"day\", package) %>%\n  ggplot(aes(date, log1p(value))) +\n  geom_point(aes(group = package, color = package), size = 1) +\n  ggtitle(paste(\"Package Downloads: {healthyverse}\")) +\n  geom_smooth(method = \"loess\", color = \"black\",  se = FALSE) +\n  geom_vline(\n    data = pkg_tbl\n    , aes(xintercept = as.Date(date))\n    , color = \"red\"\n    , lwd = 1\n    , lty = \"solid\"\n  ) +\n  facet_wrap(package ~., ncol = 2, scales = \"free_x\") +\n  theme_minimal() +\n  labs(\n    subtitle = \"Vertical lines represent release dates\",\n    x = \"Date\",\n    y = \"log1p(Counts)\",\n    color = \"Package\"\n  ) +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](man/figures/README-ts_plots-2.png){width=1152}\n:::\n\n```{.r .cell-code}\ndata_tbl %>%\n  ts_downloads_tbl(.by_time = \"day\") %>%\n  rename(Actual = value) %>%\n  tk_augment_differences(.value = Actual, .differences = 1) %>%\n  tk_augment_differences(.value = Actual, .differences = 2) %>%\n  rename(velocity = contains(\"_diff1\")) %>%\n  rename(acceleration = contains(\"_diff2\")) %>%\n  pivot_longer(-date) %>%\n  mutate(name = str_to_title(name)) %>%\n  mutate(name = as_factor(name)) %>%\n  ggplot(aes(x = date, y = log1p(value), group = name)) +\n  geom_point(alpha = .2) +\n  geom_vline(\n    data = pkg_tbl\n    , aes(xintercept = as.Date(date), color = package)\n    , lwd = 1\n    , lty = \"solid\"\n  ) +\n  facet_wrap(name ~ ., ncol = 1, scale = \"free\") +\n  theme_minimal() +\n  labs(\n    title = \"Total Downloads: Trend, Velocity, and Accelertion\",\n    subtitle = \"Vertical Lines Indicate a CRAN Release date for a package.\",\n    x = \"Date\",\n    y = \"\",\n    color = \"\"\n  ) +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](man/figures/README-ts_plots-3.png){width=1152}\n:::\n\n```{.r .cell-code}\ndata_tbl %>%\n  ts_downloads_tbl(.by_time = \"day\") %>%\n  plot_seasonal_diagnostics(\n    .date_var = date,\n    .value = log1p(value),\n    .interactive = FALSE\n  ) +\n  theme_minimal() +\n  labs(\n    title = \"Seasonal Diagnostics\",\n    subtitle = \"Values are log1p\"\n  )\n```\n\n::: {.cell-output-display}\n![](man/figures/README-ts_plots-4.png){width=1152}\n:::\n\n```{.r .cell-code}\ndata_tbl %>%\n  ts_downloads_tbl(.by_time = \"day\") %>%\n  plot_stl_diagnostics(\n    .date_var = date,\n    .value = log1p(value),\n    .interactive = FALSE\n  ) +\n  theme_minimal() +\n  labs(\n    title = \"STL Diagnostics\",\n    subtitle = \"Values are log1p\"\n  )\n```\n\n::: {.cell-output-display}\n![](man/figures/README-ts_plots-5.png){width=1152}\n:::\n:::\n\n\n# Mapping\n\nSo now that we have seen all the downloads in variaous ways, where did they all come from? Lets take a look.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tmaptools)\nlibrary(countrycode)\nlibrary(mapview)\nlibrary(htmlwidgets)\nlibrary(webshot)\n\n# mapping_dataset(.data_year = \"2023\") %>%\n#   head() %>%\n#   knitr::kable()\n\nl <- map_leaflet()\nsaveWidget(l, \"downloads_map.html\")\ntry(webshot(\"downloads_map.html\", file = \"map.png\", cliprect = \"viewport\"))\n```\n\n::: {.cell-output-display}\n![](man/figures/README-mapping-1.png){width=1152}\n:::\n:::\n\n\n<!-- ![map of downloads](map.png) -->\n\nThere was a total of 147 different countries that downloaded `healthyverse` packages in 2023.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}