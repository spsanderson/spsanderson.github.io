{
  "hash": "0126c2d63306b311b5174dbde3ae7ce8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"A Review of 2022\"\nauthor: \"Steven P Sanderson II, MPH\"\ndate: \"2024-05-28\"\noutput:\n  html:\n    #code_folding: hide\n    highlight: tango\n    toc: no\n    toc-depth: 2\n    includes:\n      in_header: GA_Script.html\n---\n\n\n\n\n\n\n# \n\n> **2022** A Year in Review\n\nThe year 2022 was a big year for me. I did a lot of coding, a lot more than I typically do. The biggest push came personally in my ongoing development of my R packages that are in the [healthyverse](www.spsanderson.com/healthyverse/). To use the **healthyverse** simply do so in the familiar fashion:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"healthyverse\")\nlibrary(healthyverse)\n```\n:::\n\n\n\n\nHere are links to all of the packages:\n\n-   [`healthyR`](https://www.spsanderson.com/healthyR/)\n-   [`healthyR.data`](https://www.spsanderson.com/healthyR.data/)\n-   [`healthyR.ts`](https://www.spsanderson.com/healthyR.ts/)\n-   [`healthyR.ai`](https://www.spsanderson.com/healthyR.ai/)\n-   [`TidyDensity`](https://www.spsanderson.com/TidyDensity/)\n-   [`healthyverse`](https://www.spsanderson.com/healthyverse/)\n\nIn order to start looking at some of the data that pertains to 2022 lets first get the data from the CRAN logs. Since I do this daily already, I can simply use the rds file I already have. I am going to go through the motions though, in case others might want to do something similar. The functions I am using to get the data can [be found here](https://github.com/spsanderson/healthyverse_tsa/blob/master/00_scripts/get_data_functions.R)\n\nNow lets get that data!\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\nsource(\"01_scripts/get_data_functions.R\")\nsource(\"01_scripts/data_manipulation_functions.R\")\nsource(\"01_scripts/mapping_functions.R\")\n\nget_cran_data()\nget_package_release_data()\ncsv_to_rds()\n```\n:::\n\n\n\n\nOk now that we have our data, lets ensure that we are only using the year 2022. We can do this by filtering out data by time with the [timetk](https://business-science.github.io/timetk/) package.\n\nNow lets filter our data below, some pre-processing may need to take place.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(timetk)\ndata_tbl <- downloads_processed_tbl() %>%\n  filter_by_time(\n    .date_var = date,\n    .start_date = \"2022\",\n    .end_date = \"2022\"\n  )\n\nglimpse(data_tbl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 27,799\nColumns: 11\n$ date      <date> 2022-01-01, 2022-01-01, 2022-01-01, 2022-01-01, 2022-01-01,…\n$ time      <Period> 7H 9M 18S, 1H 40M 38S, 1H 40M 46S, 1H 41M 4S, 10H 52M 47S…\n$ date_time <dttm> 2022-01-01 07:09:18, 2022-01-01 01:40:38, 2022-01-01 01:40:…\n$ size      <int> 4866327, 1032739, 989862, 1028890, 13101, 14533, 14548, 1310…\n$ r_version <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"4.1.2\", \"4.1.2\", \"4…\n$ r_arch    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"i386\", \"i386\", \"i38…\n$ r_os      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"mingw32\", \"mingw32\"…\n$ package   <chr> \"healthyR.data\", \"healthyR\", \"healthyR\", \"healthyR\", \"health…\n$ version   <chr> \"1.0.1\", \"0.1.6\", \"0.1.6\", \"0.1.6\", \"1.0.1\", \"0.1.6\", \"0.1.6…\n$ country   <chr> \"AU\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"AU\", …\n$ ip_id     <int> 52, 48, 48, 48, 6414, 3451, 487, 817, 1251, 52, 1149, 1149, …\n```\n\n\n:::\n:::\n\n\n\n\nNow that we have our data, we have it for the year 2022 only with a start date of 2022-01-01 and an end date of 2022-12-31.\n\n# Package Information\n\nThe first thing we will do is look at how many downloads there were for each pacakge and it's version.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(knitr)\n\ndata_tbl %>% \n  count(package, version) %>% \n  pivot_wider(\n    id_cols       = version\n    , names_from  = package\n    , values_from = n\n    , values_fill = 0\n    ) %>%\n  arrange(version) %>%\n  kable()\n```\n\n::: {.cell-output-display}\n\n\n|version | TidyDensity| healthyR| healthyR.ai| healthyR.data| healthyR.ts| healthyverse|\n|:-------|-----------:|--------:|-----------:|-------------:|-----------:|------------:|\n|0.0.1   |         993|        0|          88|             0|           0|            0|\n|0.0.10  |           0|        0|         384|             0|           0|            0|\n|0.0.2   |           0|        0|          91|             0|           0|            0|\n|0.0.3   |           0|        0|          91|             0|           0|            0|\n|0.0.4   |           0|        0|         141|             0|           0|            0|\n|0.0.5   |           0|        0|         985|             0|           0|            0|\n|0.0.6   |           0|        0|        1082|             0|           0|            0|\n|0.0.7   |           0|        0|         706|             0|           0|            0|\n|0.0.8   |           0|        0|         836|             0|           0|            0|\n|0.0.9   |           0|        0|         607|             0|           0|            0|\n|0.1.0   |           0|       88|           0|             0|          87|            0|\n|0.1.1   |           0|       90|           0|             0|          99|            0|\n|0.1.2   |           0|      101|           0|             0|          87|            0|\n|0.1.3   |           0|       89|           0|             0|          87|            0|\n|0.1.4   |           0|       90|           0|             0|          87|            0|\n|0.1.5   |           0|       90|           0|             0|          90|            0|\n|0.1.6   |           0|      137|           0|             0|          90|            0|\n|0.1.7   |           0|      970|           0|             0|         881|            0|\n|0.1.8   |           0|     1080|           0|             0|        1056|            0|\n|0.1.9   |           0|      876|           0|             0|         485|            0|\n|0.2.0   |           0|     1342|           0|             0|         487|            0|\n|0.2.1   |           0|        0|           0|             0|         301|            0|\n|0.2.2   |           0|        0|           0|             0|         541|            0|\n|0.2.3   |           0|        0|           0|             0|         532|            0|\n|0.2.4   |           0|        0|           0|             0|         153|            0|\n|0.2.5   |           0|        0|           0|             0|         403|            0|\n|1.0.0   |         408|        0|           0|            90|           0|          125|\n|1.0.1   |         908|        0|           0|          3618|           0|          217|\n|1.0.2   |           0|        0|           0|             0|           0|         3030|\n|1.1.0   |         445|        0|           0|             0|           0|            0|\n|1.2.0   |         529|        0|           0|             0|           0|            0|\n|1.2.1   |         347|        0|           0|             0|           0|            0|\n|1.2.2   |         570|        0|           0|             0|           0|            0|\n|1.2.3   |         593|        0|           0|             0|           0|            0|\n|1.2.4   |         496|        0|           0|             0|           0|            0|\n\n\n:::\n:::\n\n\n\n\nNow lets see how many total downloads for the year there were for each package.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_tbl %>%\n  count(package) %>%\n  set_names(\"Package\",\"Total Downloads\") %>%\n  kable()\n```\n\n::: {.cell-output-display}\n\n\n|Package       | Total Downloads|\n|:-------------|---------------:|\n|TidyDensity   |            5289|\n|healthyR      |            4953|\n|healthyR.ai   |            5011|\n|healthyR.data |            3708|\n|healthyR.ts   |            5466|\n|healthyverse  |            3372|\n\n\n:::\n\n```{.r .cell-code}\ndata_tbl %>%\n  select(package, version) %>%\n  group_by(package) %>%\n  distinct() %>%\n  mutate(release_count = n()) %>%\n  ungroup() %>%\n  select(package, release_count) %>%\n  distinct() %>%\n  set_names(\"Package\", \"Number of Releases\") %>%\n  kable()\n```\n\n::: {.cell-output-display}\n\n\n|Package       | Number of Releases|\n|:-------------|------------------:|\n|healthyR.data |                  2|\n|healthyR      |                 11|\n|healthyverse  |                  3|\n|healthyR.ai   |                 10|\n|healthyR.ts   |                 16|\n|TidyDensity   |                  9|\n\n\n:::\n\n```{.r .cell-code}\ntotal_number_of_releases <- data_tbl %>%\n  select(package, version) %>%\n  group_by(package) %>%\n  distinct() %>%\n  mutate(release_count = n()) %>%\n  ungroup() %>%\n  select(package, release_count) %>%\n  distinct() %>%\n  summarise(total = sum(release_count, na.rm = TRUE))\n```\n:::\n\n\n\n\nSo all in all there was a total of 27,799 downloads of all the `healthyverse` packages in 2022. There were in total 51 package releases as well.\n\n# Graphs\n\nNow lets graph the data out!\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_tbl %>%\n  count(package, version) %>%\n  ggplot(aes(x = version, y = n, alpha = 0.382)) +\n  geom_col(aes(group = package, fill = package)) +\n  facet_wrap(package ~., ncol = 2, scales = \"free\") +\n  scale_y_continuous(labels = scales::label_number(big.mark = \",\")) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\") +\n  labs(\n    title = \"Downloads by Package for 2022\",\n    subtitle = \"Faceted by Package\",\n    x = \"Version\",\n    y = \"Downloads\",\n    fill = \"Package\"\n  )\n```\n\n::: {.cell-output-display}\n![](man/figures/README-gaph_of_downloads-1.png){width=1152}\n:::\n\n```{.r .cell-code}\ndata_tbl %>%\n  count(package, version) %>%\n  group_by(package) %>%\n  mutate(cumulative_downloads = cumsum(n)) %>%\n  mutate(record = row_number()) %>%\n  ungroup() %>%\n  ggplot(aes(x = record, y = cumulative_downloads, alpha = 0.382)) +\n  geom_col(aes(group = package, fill = package)) +\n  facet_wrap(package ~., ncol = 2, scales = \"free\") +\n  scale_y_continuous(labels = scales::label_number(big.mark = \",\")) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\") +\n    labs(\n    title = \"Downloads by Package for 2022\",\n    subtitle = \"Faceted by Package\",\n    x = \"Relase Number\",\n    y = \"Downloads\",\n    fill = \"Package\"\n  )\n```\n\n::: {.cell-output-display}\n![](man/figures/README-gaph_of_downloads-2.png){width=1152}\n:::\n\n```{.r .cell-code}\ndata_tbl %>%\n  count(package, version) %>%\n  group_by(package) %>%\n  mutate(cumulative_downloads = cumsum(n)) %>%\n  mutate(record = row_number()) %>%\n  ungroup() %>%\n  ggplot(aes(x = record, y = cumulative_downloads, alpha = 0.382)) +\n  geom_line(aes(color = package, group = package), size = 1) +\n  scale_y_continuous(labels = scales::label_number(big.mark = \",\")) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\") +\n  labs(\n    title = \"Cumulative Downloads by Package for 2022\",\n    subtitle = \"Colored by Package\",\n    x = \"Release Number\",\n    y = \"Downloads\",\n    color = \"Package\"\n  )\n```\n\n::: {.cell-output-display}\n![](man/figures/README-gaph_of_downloads-3.png){width=1152}\n:::\n:::\n\n\n\n\n# Time Series Graphs\n\nNow lets get some time-series graphs.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(healthyR.ts)\npkg_tbl <- readRDS(\"00_data/pkg_release_tbl.rds\")\n\ndata_tbl %>% \n  summarise_by_time(.date_var = date, n = n()) %>% \n  ts_calendar_heatmap_plot(.date_col = date, .value_col = n, .interactive = FALSE)\n```\n\n::: {.cell-output-display}\n![](man/figures/README-ts_plots-1.png){width=1152}\n:::\n\n```{.r .cell-code}\ndata_tbl %>%\n  ts_downloads_tbl(.by_time = \"day\", package) %>%\n  ggplot(aes(date, log1p(value))) +\n  geom_point(aes(group = package, color = package), size = 1) +\n  ggtitle(paste(\"Package Downloads: {healthyverse}\")) +\n  geom_smooth(method = \"loess\", color = \"black\",  se = FALSE) +\n  geom_vline(\n    data = pkg_tbl\n    , aes(xintercept = as.Date(date))\n    , color = \"red\"\n    , lwd = 1\n    , lty = \"solid\"\n  ) +\n  facet_wrap(package ~., ncol = 2, scales = \"free_x\") +\n  theme_minimal() +\n  labs(\n    subtitle = \"Vertical lines represent release dates\",\n    x = \"Date\",\n    y = \"log1p(Counts)\",\n    color = \"Package\"\n  ) +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](man/figures/README-ts_plots-2.png){width=1152}\n:::\n\n```{.r .cell-code}\ndata_tbl %>%\n  ts_downloads_tbl(.by_time = \"day\") %>%\n  rename(Actual = value) %>%\n  tk_augment_differences(.value = Actual, .differences = 1) %>%\n  tk_augment_differences(.value = Actual, .differences = 2) %>%\n  rename(velocity = contains(\"_diff1\")) %>%\n  rename(acceleration = contains(\"_diff2\")) %>%\n  pivot_longer(-date) %>%\n  mutate(name = str_to_title(name)) %>%\n  mutate(name = as_factor(name)) %>%\n  ggplot(aes(x = date, y = log1p(value), group = name)) +\n  geom_point(alpha = .2) +\n  geom_vline(\n    data = pkg_tbl\n    , aes(xintercept = as.Date(date), color = package)\n    , lwd = 1\n    , lty = \"solid\"\n  ) +\n  facet_wrap(name ~ ., ncol = 1, scale = \"free\") +\n  theme_minimal() +\n  labs(\n    title = \"Total Downloads: Trend, Velocity, and Accelertion\",\n    subtitle = \"Vertical Lines Indicate a CRAN Release date for a package.\",\n    x = \"Date\",\n    y = \"\",\n    color = \"\"\n  ) +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](man/figures/README-ts_plots-3.png){width=1152}\n:::\n\n```{.r .cell-code}\ndata_tbl %>%\n  ts_downloads_tbl(.by_time = \"day\") %>%\n  plot_seasonal_diagnostics(\n    .date_var = date,\n    .value = log1p(value),\n    .interactive = FALSE\n  ) +\n  theme_minimal() +\n  labs(\n    title = \"Seasonal Diagnostics\",\n    subtitle = \"Values are log1p\"\n  )\n```\n\n::: {.cell-output-display}\n![](man/figures/README-ts_plots-4.png){width=1152}\n:::\n\n```{.r .cell-code}\ndata_tbl %>%\n  ts_downloads_tbl(.by_time = \"day\") %>%\n  plot_stl_diagnostics(\n    .date_var = date,\n    .value = log1p(value),\n    .interactive = FALSE\n  ) +\n  theme_minimal() +\n  labs(\n    title = \"STL Diagnostics\",\n    subtitle = \"Values are log1p\"\n  )\n```\n\n::: {.cell-output-display}\n![](man/figures/README-ts_plots-5.png){width=1152}\n:::\n:::\n\n\n\n\n# Mapping\n\nSo now that we have seen all the downloads in variaous ways, where did they all come from? Lets take a look.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tmaptools)\nlibrary(countrycode)\nlibrary(mapview)\nlibrary(htmlwidgets)\nlibrary(webshot)\n\nmapping_dataset(.data_year = \"2022\") %>%\n  head() %>%\n  knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n|country             |  latitude|   longitude|display_name         |icon                                                                                  |\n|:-------------------|---------:|-----------:|:--------------------|:-------------------------------------------------------------------------------------|\n|Ghana               |  8.030028|   -1.080027|Ghana                |https://nominatim.openstreetmap.org/ui/mapicons//poi_boundary_administrative.p.20.png |\n|United States       | 39.783730| -100.445882|United States        |https://nominatim.openstreetmap.org/ui/mapicons//poi_boundary_administrative.p.20.png |\n|Hong Kong SAR China | 22.350627|  114.184916|香港 Hong Kong, 中国 |https://nominatim.openstreetmap.org/ui/mapicons//poi_boundary_administrative.p.20.png |\n|Canada              | 61.066692| -107.991707|Canada               |https://nominatim.openstreetmap.org/ui/mapicons//poi_boundary_administrative.p.20.png |\n|China               | 35.000074|  104.999927|中国                 |https://nominatim.openstreetmap.org/ui/mapicons//poi_boundary_administrative.p.20.png |\n|Jordan              | 31.166705|   36.941628|الأردن               |https://nominatim.openstreetmap.org/ui/mapicons//poi_boundary_administrative.p.20.png |\n\n\n:::\n\n```{.r .cell-code}\n# l <- map_leaflet(.data = data_tbl)\n# mapshot(x = l, file = \"map.png\")\n\nl <- map_leaflet()\nsaveWidget(l, \"downloads_map.html\")\ntry(webshot(\"downloads_map.html\", file = \"map.png\", cliprect = \"viewport\"))\n```\n\n::: {.cell-output-display}\n![](man/figures/README-mapping-1.png){width=1152}\n:::\n:::\n\n\n\n\n<!-- ![map of downloads](map.png) -->\n\nThere was a total of 147 different countries that downloaded `healthyverse` packages in 2022.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}